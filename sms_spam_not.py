# -*- coding: utf-8 -*-
"""SMS Spam/Not

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VcHnrW2V7dpYxpI5v3f3gi4EDqXnPwd0
"""

import pandas as pd
import numpy as np
import re
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

# Load the data
df = pd.read_csv('/content/train.csv')

# Explore the data
print(df.head())

print(df.info())

print(df['label'].value_counts())

# Check the column names in your dataset
print(df.columns)

X = df['sms']  # Adjust column name if needed

# Remove punctuation and numbers, and lowercase all words
df['clean_text'] = df['sms'].apply(lambda x: re.sub(r'[^a-zA-Z\s]', '', x.lower()))

# Split the data into features and target
X = df['clean_text']
y = df['label']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Convert text data into TF-IDF vectors
vectorizer = TfidfVectorizer(stop_words='english')
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Train a Naive Bayes classifier
classifier = MultinomialNB()
classifier.fit(X_train_tfidf, y_train)

# Predictions
y_pred = classifier.predict(X_test_tfidf)

# Evaluate the model
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))